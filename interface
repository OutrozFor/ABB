import tkinter as tk
from ABB import SGBD, Registro

sgbd = SGBD()

def inserir():
    cpf = entry_cpf.get()
    nome = entry_nome.get()
    data = entry_data.get()
    if cpf and nome and data:
        sgbd.inserir_registro(Registro(cpf, nome, data))
        atualizar_lista()
        limpar_campos()

def remover():
    cpf = entry_cpf.get()
    if cpf:
        sgbd.remover_registro(cpf)
        atualizar_lista()
        limpar_campos()

def buscar():
    cpf = entry_cpf.get()
    reg = sgbd.buscar_por_cpf(cpf)
    if reg:
        resultado_busca.set(f"{reg}")
    else:
        resultado_busca.set("Registro não encontrado ou excluído.")

def mostrar_edl_ordenada():
    listbox.delete(0, tk.END)
    for reg in sgbd.gerar_edl_ordenada():
        listbox.insert(tk.END, str(reg))

def limpar_campos():
    entry_cpf.delete(0, tk.END)
    entry_nome.delete(0, tk.END)
    entry_data.delete(0, tk.END)

def atualizar_lista():
    listbox.delete(0, tk.END)
    for linha in sgbd.listar_todos_cpfs():
        listbox.insert(tk.END, linha)

def mostrar_percursos():
    percursos.delete(0, tk.END)
    percursos.insert(tk.END, f"Em Ordem: {sgbd.indice_cpf.em_ordem()}")
    percursos.insert(tk.END, f"Pré-Ordem: {sgbd.indice_cpf.pre_ordem()}")
    percursos.insert(tk.END, f"Pós-Ordem: {sgbd.indice_cpf.pos_ordem()}")
    percursos.insert(tk.END, f"Em Largura: {sgbd.indice_cpf.em_largura()}")

# Interface
root = tk.Tk()
root.title("Sistema ABB")

tk.Label(root, text="CPF:").grid(row=0, column=0)
entry_cpf = tk.Entry(root)
entry_cpf.grid(row=0, column=1)

tk.Label(root, text="Nome:").grid(row=1, column=0)
entry_nome = tk.Entry(root)
entry_nome.grid(row=1, column=1)

tk.Label(root, text="Data Nasc.:").grid(row=2, column=0)
entry_data = tk.Entry(root)
entry_data.grid(row=2, column=1)

tk.Button(root, text="Inserir", command=inserir).grid(row=3, column=0)
tk.Button(root, text="Remover", command=remover).grid(row=3, column=1)
tk.Button(root, text="Buscar", command=buscar).grid(row=3, column=2)
tk.Button(root, text="EDL Ordenada", command=mostrar_edl_ordenada).grid(row=4, column=0)
tk.Button(root, text="Mostrar Percursos", command=mostrar_percursos).grid(row=4, column=1)

resultado_busca = tk.StringVar()
tk.Label(root, textvariable=resultado_busca, fg="blue").grid(row=5, column=0, columnspan=3)

tk.Label(root, text="Registros/CPFs:").grid(row=6, column=0, columnspan=3)
listbox = tk.Listbox(root, width=55)
listbox.grid(row=7, column=0, columnspan=3)

tk.Label(root, text="Percursos da Árvore de Índice:").grid(row=8, column=0, columnspan=3)
percursos = tk.Listbox(root, width=55, height=4)
percursos.grid(row=9, column=0, columnspan=3)

atualizar_lista()
root.mainloop()
